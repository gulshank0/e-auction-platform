# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: E-Auction App

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "runner=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "runner=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      
      - name: Set environment variables
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BASE_PATH=/e-auction-platform" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.runner }} ${{ steps.detect-package-manager.outputs.command }}
      
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} run build
      
      - name: Static HTML export (if needed)
        run: |
          if grep -q '"export"' package.json; then
            echo "Export command found in package.json, executing..."
            ${{ steps.detect-package-manager.outputs.runner }} run export
          elif [ -f "next.config.js" ] && grep -q "output: 'export'" next.config.js; then
            echo "Export already configured in next.config.js, skipping explicit export"
          else
            echo "No export configuration found, assuming modern Next.js with automatic static export"
          fi
        continue-on-error: true
      
      - name: Check output directory
        id: check-output
        run: |
          if [ -d "./out" ]; then
            echo "Using './out' directory for deployment"
            echo "output_dir=./out" >> $GITHUB_OUTPUT
          elif [ -d "./.next" ]; then
            echo "Using './.next' directory for deployment"
            echo "output_dir=./.next" >> $GITHUB_OUTPUT
          else
            echo "Using './dist' directory for deployment"
            echo "output_dir=./dist" >> $GITHUB_OUTPUT
          fi
      
      - name: Debug - List directories
        run: |
          echo "Current directory structure:"
          ls -la
          if [ -d "./out" ]; then
            echo "Contents of ./out:"
            ls -la ./out
          fi
          if [ -d "./.next" ]; then
            echo "Contents of ./.next:"
            ls -la ./.next
          fi
      
      - name: Verify production build
        run: |
          echo "Verifying production build..."
          if [ -d "./out" ]; then
            echo "✅ Static export successful"
          elif [ -d "./.next" ]; then
            echo "✅ Next.js build successful"
          else
            echo "❌ Build output not found!"
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.check-output.outputs.output_dir }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
